{"version":3,"sources":["components/layout/signedinlinks.js","store/actions/authAction.js","components/layout/signedoutlinks.js","components/layout/navbar.js","components/projects/projectsummery.js","components/projects/projectlist.js","components/dashboard/notifications.js","components/dashboard/dashboard.js","components/projects/projectdetails.js","components/auth/signin.js","components/auth/signup.js","components/projects/createproject.js","store/actions/projectAction.js","App.js","serviceWorker.js","store/reducers/projectReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","components/config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAT","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","signup","FirstName","LastName","signUp","html","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","CreateProject","createProject","history","push","getFirbase","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","projectReducer","action","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","userProfile","attachAuthIsReady","useFirestoreForProfile","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f5849cf8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authAction\";\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  console.log(newUser);\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(resp => {\r\n        return firestore\r\n          .collection(\"user\")\r\n          .doc(resp.user.uid)\r\n          .set({\r\n            firstName: newUser.FirstName,\r\n            lastName: newUser.LastName,\r\n            initials: newUser.FirstName[0] + newUser.LastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst SignedOutLinks=()=>{\r\n    return(\r\n    <ul className=\"right\">\r\n       <li><NavLink to='/signup'>Signup</NavLink></li>\r\n       <li><NavLink to='/signin'>Login</NavLink></li>\r\n      \r\n    </ul>\r\n)  }           \r\n\r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./signedinlinks\";\r\nimport SignedOutLinks from \"./signedoutlinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth);\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper yellow darken-5\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          CONTENTDASH\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title} </span>\r\n        <p>\r\n          posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAT.toDate()).calendar()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./projectsummery\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-List section\">\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id}>\r\n              <ProjectSummary project={project} key={project.id} />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span> {item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport ProjectList from \"../projects/projectlist\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Notifications from \"./notifications\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAT\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content} </p>\r\n          </div>\r\n          <div className=\"card-action gret lighten-4 grey--text\">\r\n            <div>\r\n              posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAT.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign in</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pinklighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../../src/store/actions/authAction\";\r\n\r\nclass signup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    FirstName: \"\",\r\n    LastName: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label html=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label html=\"email\">password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label html=\"FirstName\">FirstName</label>\r\n            <input type=\"text\" id=\"FirstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label html=\"LastName\">LastName</label>\r\n            <input type=\"text\" id=\"LastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pinklighten-1 z-depth-0\">SIGN UP</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(signup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">TITLE</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pinklighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirbase, getFirestore }) => {\r\n    // make asyncall database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAT: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React ,{ Component } from 'react';\nimport{BrowserRouter, Switch, Route} from  'react-router-dom'\nimport Navbar from './components/layout/navbar'\nimport Dashboard from './components/dashboard/dashboard'\nimport ProjectDetails from './components/projects/projectdetails'\nimport SignIn from './components/auth/signin'\nimport signup from './components/auth/signup'\nimport CreateProject from './components/projects/createproject'\n\n\nclass  App extends Component{\n  render(){\n    return(\n      <BrowserRouter>\n        <div >\n          <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}  />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn}  />\n          <Route path='/signup' component={signup} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      \n      \n          </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState ={\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the star ', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'},\r\n        \r\n\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state =initState , action) => {\r\n     switch(action.type){\r\n         case 'CREATE_PROJECT':\r\n             console.log('create project', action.project)\r\n             return state;\r\n             case 'CREATE_PROJECT_ERROR':\r\n                 console.log('create project error', action.err);\r\n                 return state;\r\n            default:\r\n                return state;\r\n     }\r\n\r\n}\r\nexport default projectReducer;","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        ...state,\r\n        authError: \"LOGIN FAILED\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"suceess\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","import projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","  import firebase from 'firebase/app'\r\n  import 'firebase/firestore'\r\n  import 'firebase/auth'\r\n  \r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyAs7TOjIDgVTrUzG2MvDqgjtUTB96-06YQ\",\r\n    authDomain: \"net-ninja-marioplan-113cd.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-113cd.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-113cd\",\r\n    storageBucket: \"net-ninja-marioplan-113cd.appspot.com\",\r\n    messagingSenderId: \"5933373159\",\r\n    appId: \"1:5933373159:web:5f8d36926535805ad27442\",\r\n    measurementId: \"G-7TR1YM6RPY\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n\r\n  export default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./components/config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      userProfile: \"user\",\n      attachAuthIsReady: true,\n      useFirestoreForProfile: true\n    })\n  )\n);\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}